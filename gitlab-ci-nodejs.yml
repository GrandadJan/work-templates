#workflow:
#  rules:
#    - if: $CI_COMMIT_TITLE =~ /-draft$/
#      when: never
#    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
#    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

cache:
  key: $CI_COMMIT_REF_SLUG
  paths:
    - .npm/

stages:
  - build
  - deploy


build project:
  stage: build
  image: node:16.15.1-alpine
  before_script:
  - npm ci --cache .npm --prefer-offline
  script:
    - npm install
    - CI=false npm run build
  artifacts:
    when: on_success
    paths:
      - build
    expire_in: 20 mins
  rules:
     - if: $CI_COMMIT_REF_NAME == "main"
       when: always
     - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"
       when: always
     - if: $CI_COMMIT_REF_NAME == "develop"
       when: always
     - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"
       when: always

deploy s3 stagging:
  stage: deploy
  dependencies:
     - build project
  image:
    name: amazon/aws-cli
    entrypoint: [""]
  script:
    - echo $TEST_VAR
    - echo $S3_BUCKET
    - echo $AWS_DEFAULT_REGION
    - echo $AWS_ACCESS_KEY_ID


    - aws s3 rm s3://$S3_STAGE_BUCKET --recursive   
  #  - aws s3api delete-objects --bucket $S3_STAGE_BUCKET 
  #    --delete "$(aws s3api list-object-versions 
  #    --bucket "$S3_STAGE_BUCKET")"
    - aws s3 cp build s3://$S3_STAGE_BUCKET --recursive

  rules:
     - if: $CI_COMMIT_REF_NAME == "develop"
       when: always
     - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"
       when: always



deploy s3 prod:
  stage: deploy
  dependencies:
     - build project
  image:
    name: amazon/aws-cli
    entrypoint: [""]
  script:

    - aws s3 rm s3://$S3_BUCKET_EN --recursive   
  #  - aws s3api delete-objects --bucket $S3_BUCKET_EN  
  #    --delete "$(aws s3api list-object-versions 
  #    --bucket "$S3_BUCKET_EN")"
    - aws s3 cp build s3://$S3_BUCKET_EN --recursive
   

    - aws s3 rm s3://$S3_BUCKET_ES --recursive
    - aws s3 cp build s3://$S3_BUCKET_ES --recursive

  rules:
     - if: $CI_COMMIT_REF_NAME == "main"
       when: always
     - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"
       when: always
